/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables.records;


import am.ik.gitbucketoauth.jooq.tables.Collaborator;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollaboratorRecord extends UpdatableRecordImpl<CollaboratorRecord> implements Record3<String, String, String> {

	private static final long serialVersionUID = 383001334;

	/**
	 * Setter for <code>PUBLIC.COLLABORATOR.USER_NAME</code>.
	 */
	public void setUserName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.COLLABORATOR.USER_NAME</code>.
	 */
	public String getUserName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.COLLABORATOR.REPOSITORY_NAME</code>.
	 */
	public void setRepositoryName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.COLLABORATOR.REPOSITORY_NAME</code>.
	 */
	public String getRepositoryName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.COLLABORATOR.COLLABORATOR_NAME</code>.
	 */
	public void setCollaboratorName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.COLLABORATOR.COLLABORATOR_NAME</code>.
	 */
	public String getCollaboratorName() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record3<String, String, String> key() {
		return (Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Collaborator.COLLABORATOR.USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Collaborator.COLLABORATOR.REPOSITORY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Collaborator.COLLABORATOR.COLLABORATOR_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getRepositoryName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getCollaboratorName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CollaboratorRecord value1(String value) {
		setUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CollaboratorRecord value2(String value) {
		setRepositoryName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CollaboratorRecord value3(String value) {
		setCollaboratorName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CollaboratorRecord values(String value1, String value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CollaboratorRecord
	 */
	public CollaboratorRecord() {
		super(Collaborator.COLLABORATOR);
	}

	/**
	 * Create a detached, initialised CollaboratorRecord
	 */
	public CollaboratorRecord(String userName, String repositoryName, String collaboratorName) {
		super(Collaborator.COLLABORATOR);

		setValue(0, userName);
		setValue(1, repositoryName);
		setValue(2, collaboratorName);
	}
}
