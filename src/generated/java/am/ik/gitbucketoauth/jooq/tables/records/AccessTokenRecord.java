/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables.records;


import am.ik.gitbucketoauth.jooq.tables.AccessToken;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccessTokenRecord extends UpdatableRecordImpl<AccessTokenRecord> implements Record4<Integer, String, String, String> {

	private static final long serialVersionUID = -274875610;

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKEN.ACCESS_TOKEN_ID</code>.
	 */
	public void setAccessTokenId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKEN.ACCESS_TOKEN_ID</code>.
	 */
	public Integer getAccessTokenId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKEN.TOKEN_HASH</code>.
	 */
	public void setTokenHash(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKEN.TOKEN_HASH</code>.
	 */
	public String getTokenHash() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKEN.USER_NAME</code>.
	 */
	public void setUserName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKEN.USER_NAME</code>.
	 */
	public String getUserName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.ACCESS_TOKEN.NOTE</code>.
	 */
	public void setNote(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.ACCESS_TOKEN.NOTE</code>.
	 */
	public String getNote() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return AccessToken.ACCESS_TOKEN.ACCESS_TOKEN_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AccessToken.ACCESS_TOKEN.TOKEN_HASH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return AccessToken.ACCESS_TOKEN.USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return AccessToken.ACCESS_TOKEN.NOTE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getAccessTokenId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getTokenHash();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getNote();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokenRecord value1(Integer value) {
		setAccessTokenId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokenRecord value2(String value) {
		setTokenHash(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokenRecord value3(String value) {
		setUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokenRecord value4(String value) {
		setNote(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AccessTokenRecord values(Integer value1, String value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AccessTokenRecord
	 */
	public AccessTokenRecord() {
		super(AccessToken.ACCESS_TOKEN);
	}

	/**
	 * Create a detached, initialised AccessTokenRecord
	 */
	public AccessTokenRecord(Integer accessTokenId, String tokenHash, String userName, String note) {
		super(AccessToken.ACCESS_TOKEN);

		setValue(0, accessTokenId);
		setValue(1, tokenHash);
		setValue(2, userName);
		setValue(3, note);
	}
}
