/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables;


import am.ik.gitbucketoauth.jooq.Keys;
import am.ik.gitbucketoauth.jooq.Public;
import am.ik.gitbucketoauth.jooq.tables.records.PullRequestRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PullRequest extends TableImpl<PullRequestRecord> {

	private static final long serialVersionUID = 867997976;

	/**
	 * The reference instance of <code>PUBLIC.PULL_REQUEST</code>
	 */
	public static final PullRequest PULL_REQUEST = new PullRequest();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PullRequestRecord> getRecordType() {
		return PullRequestRecord.class;
	}

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.USER_NAME</code>.
	 */
	public final TableField<PullRequestRecord, String> USER_NAME = createField("USER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.REPOSITORY_NAME</code>.
	 */
	public final TableField<PullRequestRecord, String> REPOSITORY_NAME = createField("REPOSITORY_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.ISSUE_ID</code>.
	 */
	public final TableField<PullRequestRecord, Integer> ISSUE_ID = createField("ISSUE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.BRANCH</code>.
	 */
	public final TableField<PullRequestRecord, String> BRANCH = createField("BRANCH", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.REQUEST_USER_NAME</code>.
	 */
	public final TableField<PullRequestRecord, String> REQUEST_USER_NAME = createField("REQUEST_USER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.REQUEST_REPOSITORY_NAME</code>.
	 */
	public final TableField<PullRequestRecord, String> REQUEST_REPOSITORY_NAME = createField("REQUEST_REPOSITORY_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.REQUEST_BRANCH</code>.
	 */
	public final TableField<PullRequestRecord, String> REQUEST_BRANCH = createField("REQUEST_BRANCH", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.COMMIT_ID_FROM</code>.
	 */
	public final TableField<PullRequestRecord, String> COMMIT_ID_FROM = createField("COMMIT_ID_FROM", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.PULL_REQUEST.COMMIT_ID_TO</code>.
	 */
	public final TableField<PullRequestRecord, String> COMMIT_ID_TO = createField("COMMIT_ID_TO", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.PULL_REQUEST</code> table reference
	 */
	public PullRequest() {
		this("PULL_REQUEST", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.PULL_REQUEST</code> table reference
	 */
	public PullRequest(String alias) {
		this(alias, PULL_REQUEST);
	}

	private PullRequest(String alias, Table<PullRequestRecord> aliased) {
		this(alias, aliased, null);
	}

	private PullRequest(String alias, Table<PullRequestRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PullRequestRecord> getPrimaryKey() {
		return Keys.IDX_PULL_REQUEST_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PullRequestRecord>> getKeys() {
		return Arrays.<UniqueKey<PullRequestRecord>>asList(Keys.IDX_PULL_REQUEST_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PullRequestRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PullRequestRecord, ?>>asList(Keys.IDX_PULL_REQUEST_FK0);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PullRequest as(String alias) {
		return new PullRequest(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PullRequest rename(String name) {
		return new PullRequest(name, null);
	}
}
