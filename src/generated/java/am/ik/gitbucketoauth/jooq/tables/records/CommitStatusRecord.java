/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables.records;


import am.ik.gitbucketoauth.jooq.tables.CommitStatus;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommitStatusRecord extends UpdatableRecordImpl<CommitStatusRecord> implements Record11<Integer, String, String, String, String, String, String, String, String, Timestamp, Timestamp> {

	private static final long serialVersionUID = 991806251;

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.COMMIT_STATUS_ID</code>.
	 */
	public void setCommitStatusId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.COMMIT_STATUS_ID</code>.
	 */
	public Integer getCommitStatusId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.USER_NAME</code>.
	 */
	public void setUserName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.USER_NAME</code>.
	 */
	public String getUserName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.REPOSITORY_NAME</code>.
	 */
	public void setRepositoryName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.REPOSITORY_NAME</code>.
	 */
	public String getRepositoryName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.COMMIT_ID</code>.
	 */
	public void setCommitId(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.COMMIT_ID</code>.
	 */
	public String getCommitId() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.CONTEXT</code>.
	 */
	public void setContext(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.CONTEXT</code>.
	 */
	public String getContext() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.STATE</code>.
	 */
	public void setState(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.STATE</code>.
	 */
	public String getState() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.TARGET_URL</code>.
	 */
	public void setTargetUrl(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.TARGET_URL</code>.
	 */
	public String getTargetUrl() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.DESCRIPTION</code>.
	 */
	public void setDescription(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.DESCRIPTION</code>.
	 */
	public String getDescription() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.CREATOR</code>.
	 */
	public void setCreator(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.CREATOR</code>.
	 */
	public String getCreator() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.REGISTERED_DATE</code>.
	 */
	public void setRegisteredDate(Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.REGISTERED_DATE</code>.
	 */
	public Timestamp getRegisteredDate() {
		return (Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>PUBLIC.COMMIT_STATUS.UPDATED_DATE</code>.
	 */
	public void setUpdatedDate(Timestamp value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>PUBLIC.COMMIT_STATUS.UPDATED_DATE</code>.
	 */
	public Timestamp getUpdatedDate() {
		return (Timestamp) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<Integer, String, String, String, String, String, String, String, String, Timestamp, Timestamp> fieldsRow() {
		return (Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<Integer, String, String, String, String, String, String, String, String, Timestamp, Timestamp> valuesRow() {
		return (Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return CommitStatus.COMMIT_STATUS.COMMIT_STATUS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return CommitStatus.COMMIT_STATUS.USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return CommitStatus.COMMIT_STATUS.REPOSITORY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return CommitStatus.COMMIT_STATUS.COMMIT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return CommitStatus.COMMIT_STATUS.CONTEXT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return CommitStatus.COMMIT_STATUS.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return CommitStatus.COMMIT_STATUS.TARGET_URL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return CommitStatus.COMMIT_STATUS.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return CommitStatus.COMMIT_STATUS.CREATOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field10() {
		return CommitStatus.COMMIT_STATUS.REGISTERED_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field11() {
		return CommitStatus.COMMIT_STATUS.UPDATED_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getCommitStatusId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getRepositoryName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getCommitId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getContext();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getTargetUrl();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getCreator();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value10() {
		return getRegisteredDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value11() {
		return getUpdatedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value1(Integer value) {
		setCommitStatusId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value2(String value) {
		setUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value3(String value) {
		setRepositoryName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value4(String value) {
		setCommitId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value5(String value) {
		setContext(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value6(String value) {
		setState(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value7(String value) {
		setTargetUrl(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value8(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value9(String value) {
		setCreator(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value10(Timestamp value) {
		setRegisteredDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord value11(Timestamp value) {
		setUpdatedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitStatusRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, Timestamp value10, Timestamp value11) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CommitStatusRecord
	 */
	public CommitStatusRecord() {
		super(CommitStatus.COMMIT_STATUS);
	}

	/**
	 * Create a detached, initialised CommitStatusRecord
	 */
	public CommitStatusRecord(Integer commitStatusId, String userName, String repositoryName, String commitId, String context, String state, String targetUrl, String description, String creator, Timestamp registeredDate, Timestamp updatedDate) {
		super(CommitStatus.COMMIT_STATUS);

		setValue(0, commitStatusId);
		setValue(1, userName);
		setValue(2, repositoryName);
		setValue(3, commitId);
		setValue(4, context);
		setValue(5, state);
		setValue(6, targetUrl);
		setValue(7, description);
		setValue(8, creator);
		setValue(9, registeredDate);
		setValue(10, updatedDate);
	}
}
