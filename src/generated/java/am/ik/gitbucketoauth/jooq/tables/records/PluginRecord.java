/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables.records;


import am.ik.gitbucketoauth.jooq.tables.Plugin;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PluginRecord extends UpdatableRecordImpl<PluginRecord> implements Record2<String, String> {

	private static final long serialVersionUID = 622269785;

	/**
	 * Setter for <code>PUBLIC.PLUGIN.PLUGIN_ID</code>.
	 */
	public void setPluginId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.PLUGIN.PLUGIN_ID</code>.
	 */
	public String getPluginId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.PLUGIN.VERSION</code>.
	 */
	public void setVersion(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.PLUGIN.VERSION</code>.
	 */
	public String getVersion() {
		return (String) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<String, String> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Plugin.PLUGIN.PLUGIN_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Plugin.PLUGIN.VERSION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getPluginId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getVersion();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PluginRecord value1(String value) {
		setPluginId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PluginRecord value2(String value) {
		setVersion(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PluginRecord values(String value1, String value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PluginRecord
	 */
	public PluginRecord() {
		super(Plugin.PLUGIN);
	}

	/**
	 * Create a detached, initialised PluginRecord
	 */
	public PluginRecord(String pluginId, String version) {
		super(Plugin.PLUGIN);

		setValue(0, pluginId);
		setValue(1, version);
	}
}
