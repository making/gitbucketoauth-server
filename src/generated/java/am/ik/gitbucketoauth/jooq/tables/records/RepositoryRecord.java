/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables.records;


import am.ik.gitbucketoauth.jooq.tables.Repository;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Record2;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RepositoryRecord extends UpdatableRecordImpl<RepositoryRecord> implements Record12<String, String, Boolean, String, String, Timestamp, Timestamp, Timestamp, String, String, String, String> {

	private static final long serialVersionUID = 946383735;

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.USER_NAME</code>.
	 */
	public void setUserName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.USER_NAME</code>.
	 */
	public String getUserName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.REPOSITORY_NAME</code>.
	 */
	public void setRepositoryName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.REPOSITORY_NAME</code>.
	 */
	public String getRepositoryName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.PRIVATE</code>.
	 */
	public void setPrivate(Boolean value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.PRIVATE</code>.
	 */
	public Boolean getPrivate() {
		return (Boolean) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.DESCRIPTION</code>.
	 */
	public void setDescription(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.DESCRIPTION</code>.
	 */
	public String getDescription() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.DEFAULT_BRANCH</code>.
	 */
	public void setDefaultBranch(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.DEFAULT_BRANCH</code>.
	 */
	public String getDefaultBranch() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.REGISTERED_DATE</code>.
	 */
	public void setRegisteredDate(Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.REGISTERED_DATE</code>.
	 */
	public Timestamp getRegisteredDate() {
		return (Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.UPDATED_DATE</code>.
	 */
	public void setUpdatedDate(Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.UPDATED_DATE</code>.
	 */
	public Timestamp getUpdatedDate() {
		return (Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.LAST_ACTIVITY_DATE</code>.
	 */
	public void setLastActivityDate(Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.LAST_ACTIVITY_DATE</code>.
	 */
	public Timestamp getLastActivityDate() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.ORIGIN_USER_NAME</code>.
	 */
	public void setOriginUserName(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.ORIGIN_USER_NAME</code>.
	 */
	public String getOriginUserName() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.ORIGIN_REPOSITORY_NAME</code>.
	 */
	public void setOriginRepositoryName(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.ORIGIN_REPOSITORY_NAME</code>.
	 */
	public String getOriginRepositoryName() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.PARENT_USER_NAME</code>.
	 */
	public void setParentUserName(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.PARENT_USER_NAME</code>.
	 */
	public String getParentUserName() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>PUBLIC.REPOSITORY.PARENT_REPOSITORY_NAME</code>.
	 */
	public void setParentRepositoryName(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>PUBLIC.REPOSITORY.PARENT_REPOSITORY_NAME</code>.
	 */
	public String getParentRepositoryName() {
		return (String) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<String, String, Boolean, String, String, Timestamp, Timestamp, Timestamp, String, String, String, String> fieldsRow() {
		return (Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<String, String, Boolean, String, String, Timestamp, Timestamp, Timestamp, String, String, String, String> valuesRow() {
		return (Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Repository.REPOSITORY.USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Repository.REPOSITORY.REPOSITORY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field3() {
		return Repository.REPOSITORY.PRIVATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Repository.REPOSITORY.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Repository.REPOSITORY.DEFAULT_BRANCH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field6() {
		return Repository.REPOSITORY.REGISTERED_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field7() {
		return Repository.REPOSITORY.UPDATED_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return Repository.REPOSITORY.LAST_ACTIVITY_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Repository.REPOSITORY.ORIGIN_USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return Repository.REPOSITORY.ORIGIN_REPOSITORY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field11() {
		return Repository.REPOSITORY.PARENT_USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return Repository.REPOSITORY.PARENT_REPOSITORY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getRepositoryName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value3() {
		return getPrivate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getDefaultBranch();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value6() {
		return getRegisteredDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value7() {
		return getUpdatedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getLastActivityDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getOriginUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getOriginRepositoryName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value11() {
		return getParentUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getParentRepositoryName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value1(String value) {
		setUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value2(String value) {
		setRepositoryName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value3(Boolean value) {
		setPrivate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value4(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value5(String value) {
		setDefaultBranch(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value6(Timestamp value) {
		setRegisteredDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value7(Timestamp value) {
		setUpdatedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value8(Timestamp value) {
		setLastActivityDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value9(String value) {
		setOriginUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value10(String value) {
		setOriginRepositoryName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value11(String value) {
		setParentUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord value12(String value) {
		setParentRepositoryName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RepositoryRecord values(String value1, String value2, Boolean value3, String value4, String value5, Timestamp value6, Timestamp value7, Timestamp value8, String value9, String value10, String value11, String value12) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RepositoryRecord
	 */
	public RepositoryRecord() {
		super(Repository.REPOSITORY);
	}

	/**
	 * Create a detached, initialised RepositoryRecord
	 */
	public RepositoryRecord(String userName, String repositoryName, Boolean private_, String description, String defaultBranch, Timestamp registeredDate, Timestamp updatedDate, Timestamp lastActivityDate, String originUserName, String originRepositoryName, String parentUserName, String parentRepositoryName) {
		super(Repository.REPOSITORY);

		setValue(0, userName);
		setValue(1, repositoryName);
		setValue(2, private_);
		setValue(3, description);
		setValue(4, defaultBranch);
		setValue(5, registeredDate);
		setValue(6, updatedDate);
		setValue(7, lastActivityDate);
		setValue(8, originUserName);
		setValue(9, originRepositoryName);
		setValue(10, parentUserName);
		setValue(11, parentRepositoryName);
	}
}
