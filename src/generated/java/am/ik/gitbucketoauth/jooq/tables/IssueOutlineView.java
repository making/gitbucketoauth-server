/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables;


import am.ik.gitbucketoauth.jooq.Public;
import am.ik.gitbucketoauth.jooq.tables.records.IssueOutlineViewRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IssueOutlineView extends TableImpl<IssueOutlineViewRecord> {

	private static final long serialVersionUID = 1092388571;

	/**
	 * The reference instance of <code>PUBLIC.ISSUE_OUTLINE_VIEW</code>
	 */
	public static final IssueOutlineView ISSUE_OUTLINE_VIEW = new IssueOutlineView();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<IssueOutlineViewRecord> getRecordType() {
		return IssueOutlineViewRecord.class;
	}

	/**
	 * The column <code>PUBLIC.ISSUE_OUTLINE_VIEW.USER_NAME</code>.
	 */
	public final TableField<IssueOutlineViewRecord, String> USER_NAME = createField("USER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>PUBLIC.ISSUE_OUTLINE_VIEW.REPOSITORY_NAME</code>.
	 */
	public final TableField<IssueOutlineViewRecord, String> REPOSITORY_NAME = createField("REPOSITORY_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>PUBLIC.ISSUE_OUTLINE_VIEW.ISSUE_ID</code>.
	 */
	public final TableField<IssueOutlineViewRecord, Integer> ISSUE_ID = createField("ISSUE_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>PUBLIC.ISSUE_OUTLINE_VIEW.COMMENT_COUNT</code>.
	 */
	public final TableField<IssueOutlineViewRecord, Long> COMMENT_COUNT = createField("COMMENT_COUNT", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>PUBLIC.ISSUE_OUTLINE_VIEW</code> table reference
	 */
	public IssueOutlineView() {
		this("ISSUE_OUTLINE_VIEW", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.ISSUE_OUTLINE_VIEW</code> table reference
	 */
	public IssueOutlineView(String alias) {
		this(alias, ISSUE_OUTLINE_VIEW);
	}

	private IssueOutlineView(String alias, Table<IssueOutlineViewRecord> aliased) {
		this(alias, aliased, null);
	}

	private IssueOutlineView(String alias, Table<IssueOutlineViewRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueOutlineView as(String alias) {
		return new IssueOutlineView(alias, this);
	}

	/**
	 * Rename this table
	 */
	public IssueOutlineView rename(String name) {
		return new IssueOutlineView(name, null);
	}
}
