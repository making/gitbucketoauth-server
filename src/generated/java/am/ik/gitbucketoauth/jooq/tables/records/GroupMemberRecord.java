/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables.records;


import am.ik.gitbucketoauth.jooq.tables.GroupMember;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupMemberRecord extends UpdatableRecordImpl<GroupMemberRecord> implements Record3<String, String, Boolean> {

	private static final long serialVersionUID = 2036865324;

	/**
	 * Setter for <code>PUBLIC.GROUP_MEMBER.GROUP_NAME</code>.
	 */
	public void setGroupName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.GROUP_MEMBER.GROUP_NAME</code>.
	 */
	public String getGroupName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.GROUP_MEMBER.USER_NAME</code>.
	 */
	public void setUserName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.GROUP_MEMBER.USER_NAME</code>.
	 */
	public String getUserName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.GROUP_MEMBER.MANAGER</code>.
	 */
	public void setManager(Boolean value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.GROUP_MEMBER.MANAGER</code>.
	 */
	public Boolean getManager() {
		return (Boolean) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, Boolean> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, String, Boolean> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return GroupMember.GROUP_MEMBER.GROUP_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return GroupMember.GROUP_MEMBER.USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field3() {
		return GroupMember.GROUP_MEMBER.MANAGER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getGroupName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value3() {
		return getManager();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GroupMemberRecord value1(String value) {
		setGroupName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GroupMemberRecord value2(String value) {
		setUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GroupMemberRecord value3(Boolean value) {
		setManager(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GroupMemberRecord values(String value1, String value2, Boolean value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached GroupMemberRecord
	 */
	public GroupMemberRecord() {
		super(GroupMember.GROUP_MEMBER);
	}

	/**
	 * Create a detached, initialised GroupMemberRecord
	 */
	public GroupMemberRecord(String groupName, String userName, Boolean manager) {
		super(GroupMember.GROUP_MEMBER);

		setValue(0, groupName);
		setValue(1, userName);
		setValue(2, manager);
	}
}
