/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables.records;


import am.ik.gitbucketoauth.jooq.tables.IssueComment;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IssueCommentRecord extends UpdatableRecordImpl<IssueCommentRecord> implements Record9<String, String, Integer, Integer, String, String, String, Timestamp, Timestamp> {

	private static final long serialVersionUID = 1855009406;

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.USER_NAME</code>.
	 */
	public void setUserName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.USER_NAME</code>.
	 */
	public String getUserName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.REPOSITORY_NAME</code>.
	 */
	public void setRepositoryName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.REPOSITORY_NAME</code>.
	 */
	public String getRepositoryName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.ISSUE_ID</code>.
	 */
	public void setIssueId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.ISSUE_ID</code>.
	 */
	public Integer getIssueId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.COMMENT_ID</code>.
	 */
	public void setCommentId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.COMMENT_ID</code>.
	 */
	public Integer getCommentId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.ACTION</code>.
	 */
	public void setAction(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.ACTION</code>.
	 */
	public String getAction() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.COMMENTED_USER_NAME</code>.
	 */
	public void setCommentedUserName(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.COMMENTED_USER_NAME</code>.
	 */
	public String getCommentedUserName() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.CONTENT</code>.
	 */
	public void setContent(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.CONTENT</code>.
	 */
	public String getContent() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.REGISTERED_DATE</code>.
	 */
	public void setRegisteredDate(Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.REGISTERED_DATE</code>.
	 */
	public Timestamp getRegisteredDate() {
		return (Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_COMMENT.UPDATED_DATE</code>.
	 */
	public void setUpdatedDate(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_COMMENT.UPDATED_DATE</code>.
	 */
	public Timestamp getUpdatedDate() {
		return (Timestamp) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, Integer, Integer, String, String, String, Timestamp, Timestamp> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, Integer, Integer, String, String, String, Timestamp, Timestamp> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return IssueComment.ISSUE_COMMENT.USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return IssueComment.ISSUE_COMMENT.REPOSITORY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return IssueComment.ISSUE_COMMENT.ISSUE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return IssueComment.ISSUE_COMMENT.COMMENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return IssueComment.ISSUE_COMMENT.ACTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return IssueComment.ISSUE_COMMENT.COMMENTED_USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return IssueComment.ISSUE_COMMENT.CONTENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return IssueComment.ISSUE_COMMENT.REGISTERED_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field9() {
		return IssueComment.ISSUE_COMMENT.UPDATED_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getRepositoryName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getIssueId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getCommentId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getAction();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getCommentedUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getContent();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getRegisteredDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value9() {
		return getUpdatedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value1(String value) {
		setUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value2(String value) {
		setRepositoryName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value3(Integer value) {
		setIssueId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value4(Integer value) {
		setCommentId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value5(String value) {
		setAction(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value6(String value) {
		setCommentedUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value7(String value) {
		setContent(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value8(Timestamp value) {
		setRegisteredDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord value9(Timestamp value) {
		setUpdatedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueCommentRecord values(String value1, String value2, Integer value3, Integer value4, String value5, String value6, String value7, Timestamp value8, Timestamp value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached IssueCommentRecord
	 */
	public IssueCommentRecord() {
		super(IssueComment.ISSUE_COMMENT);
	}

	/**
	 * Create a detached, initialised IssueCommentRecord
	 */
	public IssueCommentRecord(String userName, String repositoryName, Integer issueId, Integer commentId, String action, String commentedUserName, String content, Timestamp registeredDate, Timestamp updatedDate) {
		super(IssueComment.ISSUE_COMMENT);

		setValue(0, userName);
		setValue(1, repositoryName);
		setValue(2, issueId);
		setValue(3, commentId);
		setValue(4, action);
		setValue(5, commentedUserName);
		setValue(6, content);
		setValue(7, registeredDate);
		setValue(8, updatedDate);
	}
}
