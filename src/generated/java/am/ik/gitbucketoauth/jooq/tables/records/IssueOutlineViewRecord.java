/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq.tables.records;


import am.ik.gitbucketoauth.jooq.tables.IssueOutlineView;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IssueOutlineViewRecord extends TableRecordImpl<IssueOutlineViewRecord> implements Record4<String, String, Integer, Long> {

	private static final long serialVersionUID = 879359089;

	/**
	 * Setter for <code>PUBLIC.ISSUE_OUTLINE_VIEW.USER_NAME</code>.
	 */
	public void setUserName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_OUTLINE_VIEW.USER_NAME</code>.
	 */
	public String getUserName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_OUTLINE_VIEW.REPOSITORY_NAME</code>.
	 */
	public void setRepositoryName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_OUTLINE_VIEW.REPOSITORY_NAME</code>.
	 */
	public String getRepositoryName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_OUTLINE_VIEW.ISSUE_ID</code>.
	 */
	public void setIssueId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_OUTLINE_VIEW.ISSUE_ID</code>.
	 */
	public Integer getIssueId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.ISSUE_OUTLINE_VIEW.COMMENT_COUNT</code>.
	 */
	public void setCommentCount(Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.ISSUE_OUTLINE_VIEW.COMMENT_COUNT</code>.
	 */
	public Long getCommentCount() {
		return (Long) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Integer, Long> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, String, Integer, Long> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return IssueOutlineView.ISSUE_OUTLINE_VIEW.USER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return IssueOutlineView.ISSUE_OUTLINE_VIEW.REPOSITORY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return IssueOutlineView.ISSUE_OUTLINE_VIEW.ISSUE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field4() {
		return IssueOutlineView.ISSUE_OUTLINE_VIEW.COMMENT_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getUserName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getRepositoryName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getIssueId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value4() {
		return getCommentCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueOutlineViewRecord value1(String value) {
		setUserName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueOutlineViewRecord value2(String value) {
		setRepositoryName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueOutlineViewRecord value3(Integer value) {
		setIssueId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueOutlineViewRecord value4(Long value) {
		setCommentCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IssueOutlineViewRecord values(String value1, String value2, Integer value3, Long value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached IssueOutlineViewRecord
	 */
	public IssueOutlineViewRecord() {
		super(IssueOutlineView.ISSUE_OUTLINE_VIEW);
	}

	/**
	 * Create a detached, initialised IssueOutlineViewRecord
	 */
	public IssueOutlineViewRecord(String userName, String repositoryName, Integer issueId, Long commentCount) {
		super(IssueOutlineView.ISSUE_OUTLINE_VIEW);

		setValue(0, userName);
		setValue(1, repositoryName);
		setValue(2, issueId);
		setValue(3, commentCount);
	}
}
