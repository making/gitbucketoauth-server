/**
 * This class is generated by jOOQ
 */
package am.ik.gitbucketoauth.jooq;


import am.ik.gitbucketoauth.jooq.tables.AccessToken;
import am.ik.gitbucketoauth.jooq.tables.Account;
import am.ik.gitbucketoauth.jooq.tables.Activity;
import am.ik.gitbucketoauth.jooq.tables.Collaborator;
import am.ik.gitbucketoauth.jooq.tables.CommitComment;
import am.ik.gitbucketoauth.jooq.tables.CommitStatus;
import am.ik.gitbucketoauth.jooq.tables.GroupMember;
import am.ik.gitbucketoauth.jooq.tables.Issue;
import am.ik.gitbucketoauth.jooq.tables.IssueComment;
import am.ik.gitbucketoauth.jooq.tables.IssueId;
import am.ik.gitbucketoauth.jooq.tables.IssueLabel;
import am.ik.gitbucketoauth.jooq.tables.IssueOutlineView;
import am.ik.gitbucketoauth.jooq.tables.Label;
import am.ik.gitbucketoauth.jooq.tables.Milestone;
import am.ik.gitbucketoauth.jooq.tables.Plugin;
import am.ik.gitbucketoauth.jooq.tables.PullRequest;
import am.ik.gitbucketoauth.jooq.tables.Repository;
import am.ik.gitbucketoauth.jooq.tables.SshKey;
import am.ik.gitbucketoauth.jooq.tables.WebHook;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

	private static final long serialVersionUID = 647113310;

	/**
	 * The reference instance of <code>PUBLIC</code>
	 */
	public static final Public PUBLIC = new Public();

	/**
	 * No further instances allowed
	 */
	private Public() {
		super("PUBLIC");
	}

	@Override
	public final List<Sequence<?>> getSequences() {
		List result = new ArrayList();
		result.addAll(getSequences0());
		return result;
	}

	private final List<Sequence<?>> getSequences0() {
		return Arrays.<Sequence<?>>asList(
			Sequences.SYSTEM_SEQUENCE_2CBDEEE0_F515_42A0_944B_A461B20ED9A4,
			Sequences.SYSTEM_SEQUENCE_3458E0CC_3DC3_4142_9B62_F829E61F12FA,
			Sequences.SYSTEM_SEQUENCE_4528690B_3C80_409B_AC58_72964945F2BA,
			Sequences.SYSTEM_SEQUENCE_A17F8722_2B16_46FD_8F9F_7983EF217C4E,
			Sequences.SYSTEM_SEQUENCE_B5875D56_638F_40A6_952A_40EF2D945150,
			Sequences.SYSTEM_SEQUENCE_D3B6BC6B_BA1C_4693_BEA8_6FA51D8886D7,
			Sequences.SYSTEM_SEQUENCE_E4A88628_2FB5_4C35_8F59_52BB5FF7C5D1,
			Sequences.SYSTEM_SEQUENCE_EEAFC7FB_5E51_4CB7_848D_67E97F88221C);
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(
			Collaborator.COLLABORATOR,
			IssueId.ISSUE_ID,
			SshKey.SSH_KEY,
			Label.LABEL,
			IssueLabel.ISSUE_LABEL,
			Milestone.MILESTONE,
			IssueComment.ISSUE_COMMENT,
			Repository.REPOSITORY,
			WebHook.WEB_HOOK,
			GroupMember.GROUP_MEMBER,
			IssueOutlineView.ISSUE_OUTLINE_VIEW,
			Activity.ACTIVITY,
			Plugin.PLUGIN,
			CommitComment.COMMIT_COMMENT,
			PullRequest.PULL_REQUEST,
			Issue.ISSUE,
			Account.ACCOUNT,
			AccessToken.ACCESS_TOKEN,
			CommitStatus.COMMIT_STATUS);
	}
}
